/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.84
 * Generated at: 2024-01-30 04:56:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import communal.dao.UserIdTranslation;

public final class writerecipe_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/allSource/includeTemplateJspFile/head.jsp", Long.valueOf(1704520777819L));
    _jspx_dependants.put("/./allSource/includeTemplateJspFile/footer.jsp", Long.valueOf(1703930086160L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("communal.dao.UserIdTranslation");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
 //文字エンコードの指定
	request.setCharacterEncoding("UTF-8");
	response.setCharacterEncoding("UTF-8");
	//sessionのデータを読み込む
	String user_id = (String)session.getAttribute("user_id");
	
	if (user_id == null) {
		response.sendRedirect("/employmentWorks/login.jsp");
	}

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"jp\">\n");
      out.write("\n");
      out.write('\n');
 //文字エンコードの指定
	request.setCharacterEncoding("UTF-8");
	response.setCharacterEncoding("UTF-8");

      out.write("\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <script src=\"./allSource/css/bootstrap-5.3.0-dist/js/bootstrap.js\"></script>\n");
      out.write("    <link rel=\"stylesheet\" href=\"./allSource/styleSheet/normalize.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"./allSource/styleSheet/bootstrap-5.3.0-dist/css/bootstrap.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"./allSource/styleSheet/comon.css\">\n");
      out.write("    <link rel=\"icon\" href=\"./allSource/image/topIcon/KichX_icon.gif\">\n");
      out.write("    <script src=\"./allSource/javaScript/rigthDataSpacealEvent.js\"></script>\n");
      out.write("    <script src=\"./allSource/javaScript/tapHeartEvent.js\"></script>\n");
      out.write("    <title>KichX</title\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	<header>\n");
      out.write("		<!-- トップ_ログインや一言コメント -->\n");
      out.write("		<div id=\"topHeader\" class=\"custom-line\">\n");
      out.write("			<div class=\"flex\">\n");
      out.write("				<p class=\"tag grid\">日々の料理に新しいときめきを。</p>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"flex\">\n");
      out.write("				");

				UserIdTranslation.Translation(user_id);
				String name = UserIdTranslation.GetUserName(); 
				
      out.write("\n");
      out.write("				<a class=\"tag grid\">");
      out.print( name );
      out.write("さん、おかえりなさい</a>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		<!-- 検索やMyレシピへのアクセス -->\n");
      out.write("		<div id=\"bottomHeader\" class=\"custom-line\">\n");
      out.write("			<div class=\"flex\">\n");
      out.write("				<div class=\"flex\">\n");
      out.write("					<a href=\"./index.jsp\"><img\n");
      out.write("						src=\"./allSource/image/topIcon/KichX_icon.gif\" alt=\"KichXアイコン\"\n");
      out.write("						class=\"img\"></a>\n");
      out.write("					<h1 class=\"grid\">KichX</h1>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"center\">\n");
      out.write("					<div>\n");
      out.write("						<form action=\"./search.jsp\" method=\"post\" id=\"formHeader\"\n");
      out.write("							class=\"flex\">\n");
      out.write("							<input type=\"text\" class=\"formText\" placeholder=\"鶏肉　キャベツ　にんじん\" name=\"searchData\">\n");
      out.write("							<button type=\"submit\" class=\"formSubmit\">レシピ検索</button>\n");
      out.write("						</form>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"flex\">\n");
      out.write("					 <a href=\"./index.jsp\" id=\"WriteRecipe\" class=\"grid flex\"> <img\n");
      out.write("					src=\"./allSource/image/icon/house-fill.svg\" alt=\"家\" class=\"icon\">\n");
      out.write("					<p>ホームに戻る</p>\n");
      out.write("				</a>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</header>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	<main id=\"writeRecipeMain\">\n");
      out.write("		<div id=\"writeRecipeMainData\">\n");
      out.write("			<div id=\"writeRecipeMainDataTop\">\n");
      out.write("				<h3>レシピを書く</h3>\n");
      out.write("				<p>あなたのオリジナルレシピ、家庭の味をみんなにシェア！</p>\n");
      out.write("			</div>\n");
      out.write("			<h3 class=\"errorResult\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ERROR }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\n");
      out.write("			<form id=\"writeRecipeName\" method=\"post\" 　accept-charset=\"UTF-8\"\n");
      out.write("				enctype=\"multipart/form-data\" action=\"/employmentWorks/writerecipe\">\n");
      out.write("				<div id=\"writeRecipeTitle\">\n");
      out.write("					<h5>レシピのタイトル</h5>\n");
      out.write("					<p># 下記全てあとから変更可能です(レシピの作り方部分以外全て挿入必須です)</p>\n");
      out.write("				</div>\n");
      out.write("				<!-- レシピタイトル部 -->\n");
      out.write("				<input type=\"text\" id=\"writeRecipeTitleForm\"\n");
      out.write("					placeholder=\"例: 30分でOK! 主婦の味方ナスの味噌煮\" name=\"recipe_title\">\n");
      out.write("				<!-- レシピトップ画像とトップ説明部 -->\n");
      out.write("				<h5 id=\"writeRecipeDescriptionTopTitle\">トップ説明</h5>\n");
      out.write("				<div id=\"writeRecipeImageInputForm\">\n");
      out.write("					<div id=\"writeRecipeImageForm\">\n");
      out.write("						<!-- 写真挿入 -->\n");
      out.write("						<label id=\"imageForm\"> <img\n");
      out.write("							src=\"./allSource/image/icon/camera.svg\" alt=\"写真\"> <input\n");
      out.write("							type=\"file\" accept=\"image/*\" name=\"recipe_top_image\"\n");
      out.write("							id=\"inputTitleImage\">\n");
      out.write("						</label>\n");
      out.write("					</div>\n");
      out.write("					<div id=\"writeRecipeDescriptionForm\">\n");
      out.write("						<!-- 紹介文と材料 -->\n");
      out.write("						<p>レシピの紹介文(検索画面で表示されます)</p>\n");
      out.write("						<textarea wrap=\"soft\" id=\"writeRecipeDescriptionTitle\"\n");
      out.write("							name=\"recipe_introductory_essay\"\n");
      out.write("							placeholder=\"ナスを使ったシンプルでおいしい家庭料理！ナスを味噌ベースのソースで煮込み、甘辛く仕上げま、ナスのジューシーさと味噌のコクが絶妙にマッチした、簡単で美味しい料理！！\"></textarea>\n");
      out.write("						<p>材料(2人分)</p>\n");
      out.write("						<textarea wrap=\"soft\" id=\"writeRecipeDescriptionMaterial\"\n");
      out.write("							name=\"recipe_material\"\n");
      out.write("							placeholder=\"ナス: 2～3本（中サイズ） 味噌: 2～3大さじ 砂糖: 少々 酒: 1～2大さじ みりん: 1～2大さじ しょうゆ: 少々 だし汁または水: 適量 ごま油: 少々 ねぎや生姜のみじん切り、ごまなど\"></textarea>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("				<!-- レシピの作り方部 -->\n");
      out.write("				<div>\n");
      out.write("					<div id=\"writeRecipeImageDescriptionTitle\">\n");
      out.write("						<h5>レシピの作り方</h5>\n");
      out.write("						<p>作り方を入力してください(説明文を挿入する場合、写真も必須です)</p>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<!-- 一行につき4マス -->\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>1</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_1\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_1\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>2</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_2\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_2\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>3</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_3\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_3\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>4</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_4\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_4\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>5</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_5\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_5\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>6</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_6\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_6\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>7</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_7\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_7\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>8</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_8\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_8\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>9</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_9\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_9\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>10</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_10\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_10\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>11</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_11\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_11\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>12</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_12\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_12\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>13</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_13\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_13\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>14</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_14\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_14\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"writeRecipeImageDescriptionBlok\">\n");
      out.write("					<p>15</p>\n");
      out.write("					<input type=\"file\" accept=\"image/*\"\n");
      out.write("						name=\"inputRecipeDescriptionImage_15\">\n");
      out.write("					<textarea wrap=\"soft\" placeholder=\"写真の説明を記入してください\"\n");
      out.write("						name=\"inputRecipeDescriptionText_15\"></textarea>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				<!-- 各種コメント -->\n");
      out.write("				<div id=\"writeRecipeComment\">\n");
      out.write("					<div id=\"point\">\n");
      out.write("						<h5>ポイント</h5>\n");
      out.write("						<textarea wrap=\"soft\" name=\"recipe_point\"\n");
      out.write("							placeholder=\"自由な時間に限りがある主婦の皆さんでも簡単にできる、料理を作りました。味が濃いので熱中症の予防なります。お酒のお供にも最適な一品です！\"></textarea>\n");
      out.write("					</div>\n");
      out.write("					<div id=\"why\">\n");
      out.write("						<h5>きっかけ</h5>\n");
      out.write("						<textarea wrap=\"soft\" name=\"recipe_why\"\n");
      out.write("							placeholder=\"私のお気に入り料理を皆さんにも食べて欲しかったので。\"></textarea>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("				<!-- 送信ボタン -->\n");
      out.write("				<button id=\"writeRecipeSubmitButton\">\n");
      out.write("					<p>レシピを投稿する</p>\n");
      out.write("				</button>\n");
      out.write("			</form>\n");
      out.write("		</div>\n");
      out.write("	</main>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	<!-- フッターの設定 -->\n");
      out.write("	");
      out.write('\n');
 //文字エンコードの指定
	request.setCharacterEncoding("UTF-8");
	response.setCharacterEncoding("UTF-8");

      out.write("\n");
      out.write("    <footer>\n");
      out.write("        <div id=\"copyright\">copyrigt©️　2023 MurayamaKousuke. All rights reserved.</div>\n");
      out.write("    </footer>");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
